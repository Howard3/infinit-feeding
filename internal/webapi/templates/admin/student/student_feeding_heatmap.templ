package studenttempl 

import (
	"time"
	"geevly/gen/go/eda"
)

type HeatmapData [] HeatmapEntry
type HeatmapEntry struct {
	Date  string `json:"date"`
	Count int    `json:"count"`
}

// FIXME: https://github.com/a-h/templ/issues/834
var _ = templruntime.GeneratedTemplate

func convertStudentFeedingToHeatmap(fr []*eda.Student_Feeding_Event) HeatmapData {
	data := make([]HeatmapEntry, 0)
	for _, f := range fr {
		unixTs := f.GetUnixTimestamp()
		formattedDate := time.Unix(int64(unixTs), 0).Format("2006-01-02")

		data = append(data, HeatmapEntry{Date: formattedDate, Count: 1})
	}

	return data
}

script studentCalendarHeatmap(data HeatmapData, id string) {
    const maxDate = new Date();
    maxDate.setMonth(maxDate.getMonth() + 1);

    const minDate = new Date();
    minDate.setMonth(minDate.getMonth() - 11);

    const cal = new CalHeatmap();
    cal.paint({
      range: 12,
      itemSelector: '#' + id,
      date: {
        start: minDate,
        end: maxDate 
      },
      domain: {
        type: 'month',
        gutter: 10,
        padding: [0, 0, 0, 0],
        label: {
            text: "MMMYY"
        }
      },
      subDomain: {
          type: 'ghDay',
          label: 'DD',
          width: 15,
          height: 15,
      },
      data: {
        source: data,
        x: "date",
        y: "count",
        defaultValue: 0
      },
      scale:{
        color: {
            range: ['#e1e1e1', '#e19999'],
            interpolate: 'hsl',
            type: 'linear',
            domain: [0, 1],
        },
      }
    });
    
}
