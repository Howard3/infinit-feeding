package components 

import (
	"fmt"
	"strings"
)

// NewPagination creates a new Pagination struct for templates to render
func NewPagination(page, limit, count uint) Pagination {
	return Pagination{
		page:  page,
		limit: limit,
		count: count,
	}
}

type Pagination struct {
	page  uint
	limit uint
	count uint
	URL   string
}

// From
func (p *Pagination) from() uint {
	return (p.page-1)*p.limit + 1
}

// To
func (p *Pagination) to() uint {
	limit := p.page * p.limit
	if limit > p.count {
		return p.count
	}
	return limit
}

func (p *Pagination) genURLForPage(page uint) string {
	sep := "?"
	if strings.Contains(p.URL, "?") {
		sep = "&"
	}
	return fmt.Sprintf("%s%spage=%d&limit=%d", p.URL, sep, page, p.limit)
}

// Add new helper method
func (p *Pagination) totalPages() uint {
	pages := p.count / p.limit
	if p.count%p.limit > 0 {
		pages++
	}
	return pages
}

func formatPagination(p Pagination) string {
	return fmt.Sprintf("Page %d of %d (%d-%d of %d items)", 
		p.page, p.totalPages(), p.from(), p.to(), p.count)
}

templ ItemCounter(pagination Pagination) {
	<div class="flex items-center gap-4 text-sm">
		<span class="font-medium text-gray-700">{ formatPagination(pagination) }</span>
		<div class="flex items-center gap-2 border rounded-lg p-1 bg-white shadow-sm">
			<button
				hx-get={ pagination.genURLForPage(1) }
				disabled?={ pagination.page == 1 }
				class="inline-flex items-center justify-center rounded-md text-sm font-medium transition-all duration-200 
					hover:bg-gray-100 hover:text-gray-900 h-8 w-8
					disabled:opacity-40 disabled:cursor-not-allowed disabled:hover:bg-transparent
					focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-1"
			>
				<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="h-4 w-4">
					<path d="m11 17-5-5 5-5"></path>
					<path d="m18 17-5-5 5-5"></path>
				</svg>
				<span class="sr-only">First page</span>
			</button>
			<button
				hx-get={ pagination.genURLForPage(pagination.page - 1) }
				disabled?={ pagination.page == 1 }
				class="inline-flex items-center justify-center rounded-md text-sm font-medium transition-all duration-200 
					hover:bg-gray-100 hover:text-gray-900 h-8 w-8
					disabled:opacity-40 disabled:cursor-not-allowed disabled:hover:bg-transparent
					focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-1"
			>
				<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="h-4 w-4">
					<path d="m15 18-6-6 6-6"></path>
				</svg>
				<span class="sr-only">Previous page</span>
			</button>

			<div class="flex items-center gap-2 px-2 border-x">
				<input
					type="number"
					min="1"
					max={ fmt.Sprintf("%d", pagination.totalPages()) }
					value={ fmt.Sprintf("%d", pagination.page) }
					class="w-16 h-8 rounded-md border-gray-200 bg-white px-3 py-1 text-sm 
						focus:border-blue-500 focus:ring-2 focus:ring-blue-500 focus:ring-offset-1
						transition-all duration-200"
					hx-get=""
					hx-trigger="change"
					hx-target="closest div"
					hx-include="this"
					name="page"
				/>
				<span class="text-sm text-gray-500">of { fmt.Sprintf("%d", pagination.totalPages()) }</span>
			</div>

			<button
				hx-get={ pagination.genURLForPage(pagination.page + 1) }
				disabled?={ pagination.to() >= pagination.count }
				class="inline-flex items-center justify-center rounded-md text-sm font-medium transition-all duration-200 
					hover:bg-gray-100 hover:text-gray-900 h-8 w-8
					disabled:opacity-40 disabled:cursor-not-allowed disabled:hover:bg-transparent
					focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-1"
			>
				<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="h-4 w-4">
					<path d="m9 18 6-6-6-6"></path>
				</svg>
				<span class="sr-only">Next page</span>
			</button>
			<button
				hx-get={ pagination.genURLForPage(pagination.totalPages()) }
				disabled?={ pagination.to() >= pagination.count }
				class="inline-flex items-center justify-center rounded-md text-sm font-medium transition-all duration-200 
					hover:bg-gray-100 hover:text-gray-900 h-8 w-8
					disabled:opacity-40 disabled:cursor-not-allowed disabled:hover:bg-transparent
					focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-1"
			>
				<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="h-4 w-4">
					<path d="m13 17 5-5-5-5"></path>
					<path d="m6 17 5-5-5-5"></path>
				</svg>
				<span class="sr-only">Last page</span>
			</button>
		</div>
	</div>
}
