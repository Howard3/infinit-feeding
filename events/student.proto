syntax = "proto3";
package events.student;
option go_package = "geevly/eda";

import "metadata.proto";
import "google/protobuf/timestamp.proto";

message Student {
  string first_name = 1;
  string last_name = 2;
  Date date_of_birth = 3;
  string school_id = 4;
  Date date_of_enrollment = 5;
  Status status = 6;
  events.metadata.Metadata metadata = 7;
  bytes code_unique_id = 8; // used for qr code lookup
  string student_school_id = 9; // this is the id of the student that was issued by the school.
  Sex sex = 12;
  string profile_photo_id = 13;
  uint64 grade_level = 14;
  bool eligible_for_sponsorship = 16;
  repeated SponsorshipRecord sponsorship_history = 19;
  repeated GradeReport grade_history = 20;
  repeated HealthAssessment health_assessments = 10;
  repeated Feeding.Event feeding_report = 11;
  uint64 feeding_next_id = 15;

  enum Status {
    UNKNOWN_STATUS = 0;
    ACTIVE = 1;
    INACTIVE = 2;
  }

  enum Sex {
    UNKNOWN_SEX = 0;
    MALE = 1;
    FEMALE = 2;
  }

  //
  // Commands, Events, and Responses
  //

  message HealthAssessment {
  	float height_cm = 1;
  	float weight_kg = 2;
   	google.protobuf.Timestamp assessment_date = 3;
    string associated_bulk_upload_id = 4;

    message Event {
      float height_cm = 1;
      float weight_kg = 2;
      google.protobuf.Timestamp assessment_date = 3;
      string associated_bulk_upload_id = 4;
    }

    message UndoEvent {
      string associated_bulk_upload_id = 1;
    }
  }

  // GradeReport records a student's grade history
  message GradeReport {
    int32 grade = 1;
    Date test_date = 2;
    string associated_bulk_upload_id = 3;
    string school_year = 4;
    string grading_period = 5;

    message Event {
      int32 grade = 1;
      Date test_date = 2;
      string associated_bulk_upload_id = 3;
      string school_year = 4;
      string grading_period = 5;
    }

    message UndoEvent {
      string associated_bulk_upload_id = 1;
    }
  }


  // Feeding records a student's feeding
  message Feeding {
    uint64 unix_timestamp = 1;
    uint64 version = 2;
    string file_id = 3;
    uint64 id = 4;

    message Event {
      uint64 unix_timestamp = 1;
      string file_id = 2;
    }
  }

  // Create a new student
  message Create {
    string first_name = 1;
    string last_name = 2;
    Date date_of_birth = 3;
    string student_school_id = 4;
    Sex sex = 5;
    events.metadata.Metadata metadata = 7;
    uint64 grade_level = 8;

    message Event {
      string first_name = 1;
      string last_name = 2;
      Date date_of_birth = 3;
      Status status = 4;
      uint64 version = 5;
      Sex sex = 6;
      string student_school_id = 7;
      uint64 grade_level = 8;
    }
  }
  // Update a student's information
  message Update {
    string first_name = 2;
    string last_name = 3;
    Date date_of_birth = 4;
    uint64 version = 5;
    events.metadata.Metadata metadata = 6;
    string student_school_id = 7;
    Sex sex = 8;
    uint64 grade_level = 9;

    message Event {
      reserved 1;
      string first_name = 2;
      string last_name = 3;
      Date date_of_birth = 4;
      reserved 5;
      string student_school_id = 6;
      Sex sex = 8;
      uint64 grade_level = 9;
    }
  }

  // Set a student's status
  message SetStatus {
    Status status = 2;
    uint64 version = 3;
    events.metadata.Metadata metadata = 4;

    message Event {
      Status status = 2;
      uint64 version = 3;
    }
  }

  // Enroll a student
  message Enroll {
    string school_id = 2;
    Date date_of_enrollment = 3;
    uint64 version = 4;
    events.metadata.Metadata metadata = 5;

    message Event {
      string school_id = 2;
      Date date_of_enrollment = 3;
      uint64 version = 4;
    }
  }

  message Unenroll {
    uint64 version = 2;
    events.metadata.Metadata metadata = 3;

    message Event {}
  }

  message SetLookupCode {
    uint64 version = 2;
    events.metadata.Metadata metadata = 3;
    bytes code_unique_id = 4;

    message Event {
      bytes code_unique_id = 1;
      events.metadata.Metadata metadata = 2;
    }
  }

  message SetProfilePhoto {
    string file_id = 1;
    uint64 version = 2;
    events.metadata.Metadata metadata = 3;

    message Event {
      string file_id = 1;
      events.metadata.Metadata metadata = 2;
    }
  }

  message UpdateSponsorship {
    string sponsor_id = 1;
    Date start_date = 2;
    Date end_date = 3;
    uint64 version = 4;
    events.metadata.Metadata metadata = 5;
    string payment_id = 6;     // unique payment identifier
    double payment_amount = 7; // payment amount in USD

    message Event {
      string sponsor_id = 1;
      Date start_date = 2;
      Date end_date = 3;
      string payment_id = 4;
      double payment_amount = 5;
    }
  }

  message SponsorshipRecord {
    string sponsor_id = 1;
    Date start_date = 2;
    Date end_date = 3;
    string payment_id = 4;
    double payment_amount = 5;
  }

  // Add a new command for toggling eligibility
  message SetEligibility {
    bool eligible = 1;
    uint64 version = 2;
    events.metadata.Metadata metadata = 3;

    message Event { bool eligible = 1; }
  }
}

// Represents a whole or partial calendar date, such as a birthday. The time of
// day and time zone are either specified elsewhere or are insignificant. The
// date is relative to the Gregorian Calendar. This can represent one of the
// following:
//
// * A full date, with non-zero year, month, and day values
// * A month and day value, with a zero year, such as an anniversary
// * A year on its own, with zero month and day values
// * A year and month value, with a zero day, such as a credit card expiration
// date
//
// Related types are [google.type.TimeOfDay][google.type.TimeOfDay] and
// `google.protobuf.Timestamp`.
message Date {
  // Year of the date. Must be from 1 to 9999, or 0 to specify a date without
  // a year.
  int32 year = 1;

  // Month of a year. Must be from 1 to 12, or 0 to specify a year without a
  // month and day.
  int32 month = 2;

  // Day of a month. Must be from 1 to 31 and valid for the year and month, or 0
  // to specify a year by itself or a year and month where the day isn't
  // significant.
  int32 day = 3;
}
